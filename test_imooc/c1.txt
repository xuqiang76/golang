这次讲解go语言的一个编程实例，做tcp协议的网络服务器，目的是了解net包的基本使用;

本节课程假设同学们已经对go语言的基本语法有所了解；

go语言的goroutine  和 异步阻塞的并发方式使它很容易编写高并发网络服务器程序


编写代码

上传github

在测试服务器编译 运行


分析go并发方式
	runtime 环境预先内建了N个线程，当作类似容器的东西来执行 goroutine ；避免了重建线程的开销，goroutine的上下文切换又特别小。
	相对于目前一些语言的 协程概念; goroutine 能在多个线程直接调度 goroutine ，能充分利用多核cpu。
	异步方式  对于需要等待的资源的动作，比如读写远程数据：数据准备就绪再通知当前处理程序就是异步;
	如果处理程序主动去查看资源结果就是同步方式。
	阻塞  如果把 goroutine 作为语言的并发处理单元，go语言就算是阻塞式的。
	如果把系统线程作为处理单元，那么go语言就是非阻塞的。
	我觉得作为go语言的使用者应该吧go语言看作阻塞的，直接把goroutine 作为并发逻辑单位。
	
	
	
	
每个编程语言，本质上都反映了作者对于编程这件事的理解，编程应该是怎样？
我们从编程的历史来看，几十年人类的大脑能力并没有多大提高；
现在我们能编写比以前复杂很多的功能，这就是编程方式发展的结果；
一方面提取很多公用的部分，独立出来，不用我们每次都自己写了，比如操作系统，数据库 等等。
另一个方面，编程范式的发展：主要就是降低每次思考的逻辑复杂度。
面向对象编程：把逻辑基本约束在class的范围内；函数式编程：把思考范围限定在函数范围内。
这些都是一些很大的进步；go语言的一些特点也有作者对编程的理解，少年人要相信老头们的经验哦。
相信随着我们对go语言的学习，在实践中使用go语言会对编程有新的理解。






