本次讲解go语言的一个编程实例，tcp协议的网络服务器编程；目的是了解net包的基本使用
本节课程假设同学们已经对go语言的基本语法有所了解
go语言的goroutine  和 异步阻塞的并发方式使它很容易写出效率很好的高并发网络服务器程序

下面我们开始讲解例子程序，这只是一个例子，用来了解net包的使用，省略了一些工程化的内容




编写代码

上传github



在测试服务器编译 运行



分析go并发方式
	runtime 环境预先内建了N个线程，当作类似容器的东西来执行 goroutine ；避免了重建线程的开销，goroutine的上下文切换又特别小。
	相对于目前一些语言的 协程概念; goroutine 能在多个线程上调度，能充分利用多核cpu。
	异步方式  对于需要等待的资源的动作，比如读写远程数据：数据准备就绪再通知当前处理程序就是异步;
	如果处理程序主动去查看资源结果就是同步方式。
	阻塞  如果吧goroutine 作为语言的并发处理单元，go语言就是阻塞的。
	如果把线程作为处理单元，那么go语言就是非阻塞的。
	我觉得作为go语言的使用者应该吧go语言看作阻塞的，直接把goroutine 作为并发逻辑单位。
	
